networks:
  transcendence:
    driver: bridge

services:
  nginx:
    container_name: nginx
    networks:
      - transcendence
    image: nginx:latest
    ports:
      - "443:443" # HTTPS port
      - "80:80" # HTTP port
    volumes:
      - ${PWD}/nginx/conf.d:/etc/nginx/conf.d:ro
      - ${PWD}/nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - react
      - django
      - nodejs

  nodejs:
    container_name: nodejs
    networks:
      - transcendence
    build:
      context: ./nodejs
    ports:
      - "4000:4000"
    volumes:
      - ${PWD}/nodejs:/code/nodejs
      - ${PWD}/shared:/shared
      - ${PWD}/certs:/certs:ro
      - nodejs_data:/code/nodejs/node_modules

  django:
    container_name: django
    networks:
      - transcendence
    build:
      context: ./django
    ports:
      - "8000:8000"
    volumes:
      - ${PWD}/django:/app
      - ${PWD}/django/certs:/certs:ro
    env_file:
      - .env
    depends_on:
      - postgres

  react:
    container_name: react
    networks:
      - transcendence
    build:
      context: ./react
    # ports:
    #   - "3000:3000"
    volumes:
      - ${PWD}/react:/app
      - ${PWD}/shared:/shared
      - ${PWD}/certs:/certs:ro
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - django

  postgres:
    container_name: postgres
    image: postgres:16.0
    networks:
      - transcendence
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  pgadmin:
    container_name: pgadmin
    networks:
      - transcendence
    build:
      context: ./pgadmin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - .env
    depends_on:
      - postgres
volumes:
  nodejs_data:
  postgres_data:
  pgadmin_data:
